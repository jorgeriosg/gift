{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","c","type","value","onChange","target","prototype","propTypes","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACjBC,mBAAS,IADQ,mBACpCC,EADoC,KAC7BC,EAD6B,KAa5C,OACI,sBAAMC,SAPe,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAC,OAAKL,GAAL,mBAAcK,OAC7BJ,EAAS,KAIb,SACA,uBACCK,KAAK,OACLC,MAAOP,EACPQ,SAfmB,SAACL,GACjBF,EAASE,EAAEM,OAAOF,aAoB9BV,EAAYa,UAAY,CACpBZ,cAAea,IAAUC,KAAKC,Y,mCC5BpBC,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAAWH,GADrF,sBAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACEC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAYhBM,GAZgB,4CAAH,sDCCTO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEPxB,EAAUC,GACLwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAIGqB,EDpB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,0BAAd,cAA2ChB,EAA3C,OAEEoB,GAAW,mBAAGJ,UAAU,0BAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEgBvBgB,EA/BQ,WAAO,IAAD,EAEW3C,mBAAS,CAAC,KAFrB,mBAElB4C,EAFkB,KAEN7C,EAFM,KASrB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEI6C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnB7B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.896adc92.chunk.js","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport  propTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n     const [input, setInput] = useState(\"\");\n\n        const handleInput = (e) => {\n            setInput(e.target.value);\n        }\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            setCategories(c =>[ input,...c]);\n            setInput('');\n        }\n\n    return (\n        <form onSubmit={handleSubmit}>\n        <input \n         type=\"text\"\n         value={input}\n         onChange={handleInput}\n        />\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: propTypes.func.isRequired\n}","\n export const getGifts = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=mg9PGl851XmLDHPEHrTZE8nRfWIgXgoV&q=${encodeURI (category)}&limit=10`\n    const resp = await fetch(url)\n    const {data} = await resp.json();\n       const gifs = data.map(img =>{\n           return{\n               id: img.id,\n               title: img.title,\n               url: img.images?.downsized_medium.url\n           }\n        \n       })\n  return gifs\n   }\n\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__fadeInTopRight\"> { category } </h3>\n            \n            { loading && <p className=\"animate__fadeInTopRight\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport { getGifts } from '../../src/components/helpers/getGifts';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifts( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n    return state;\n}","import React  from 'react';\nimport {useState} from 'react';\nimport {AddCategory} from '../src/components/AddCategory';\nimport {GifGrid} from '../src/components/GifGrid';\n const  GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['']);\n    \n// const handleAdd = () => {\n\n    //setCategories([...categories, 'radma']);\n    //}\n\n        return (\n            <>\n                <h1>GifExpertApp</h1>\n                <AddCategory setCategories={setCategories}/>\n                <hr/>\n\n\n\n                <ol>\n                    {\n                    categories.map(category => (\n                        <GifGrid \n                        key={category}\n                        category={category}/>\n        ))\n                    }\n                </ol>\n            </>\n        )\n                \n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}